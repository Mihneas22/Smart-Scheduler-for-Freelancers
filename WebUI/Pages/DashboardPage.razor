@page "/"
@page "/dashboard"
@using Application.DTOs.User.Functions.GetUserData
@using Application.Services.User
@using Domain.Models
@using WebUI.State
@inject IUserService userService;

<PageTitle>Dashboard - BookingPro</PageTitle>

<div class="dashboard-container">
    <!-- Stats Grid -->
    <div class="stats-grid">
        <div class="stat-card">
            <div class="stat-value">
                $@if (UserData != null) {
                    if(UserData.Appointments != null)
                        @UserData.Appointments.Count
                    else
                    {
                            @noth
                        }
                }else
                {
                    @noth
                }
            </div>
            <div class="stat-label">Total Bookings This Month</div>
        </div>
        <div class="stat-card" style="background: linear-gradient(135deg, var(--success-color), #10b981);">
            <div class="stat-value">@numOfAppoint</div>
            <div class="stat-label">Appointments Today</div>
        </div>
        <div class="stat-card" style="background: linear-gradient(135deg, var(--warning-color), #f59e0b);">
            <div class="stat-value">2</div>
            <div class="stat-label">Cancellations</div>
        </div>
        <div class="stat-card" style="background: linear-gradient(135deg, var(--accent-color), #059669);">
            <div class="stat-value">
                $
                @if (UserData != null) 
                {
                    @UserData.RevenueGeneratedThisMonth
                }
                else
                {
                    @noth
                }
            </div>
            <div class="stat-label">Revenue Estimate</div>
        </div>
    </div>

    <div class="grid grid-2">
        <!-- Upcoming Appointments -->
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Upcoming Appointments</h3>
            </div>
            <div class="card-body">
                @if (UserData != null && UserData.Appointments != null)
                {
                    <div class="appointment-list">
                        @foreach (var appointment in UserData.Appointments)
                        {
                            <div class="appointment-item">
                                <div class="appointment-time">
                                    <div class="font-medium">@appointment.StartTime</div>
                                    <div class="text-sm text-light">@appointment.EndTime</div>
                                </div>
                                <div class="appointment-details">
                                    <div class="font-medium">@appointment.ClientName</div>
                                    <div class="text-sm text-medium">@appointment.Title</div>
                                </div>
                                <div class="appointment-status">
                                    <span class="status-badge @appointment.Status!.ToLower()">@appointment.Status</span>
                                </div>
                            </div>

                            <div class="text-center mt-4">
                                <a href="/appointments" class="btn btn-outline">View All Appointments</a>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="appointment-list-null">
                        <div class="appointment-item-null">
                            <div class="stat-value">No appointments</div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Notifications -->
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Notifications & Alerts</h3>
            </div>
            <div class="card-body">
                <div class="notification-list">
                    @foreach (var notification in notifications)
                    {
                        <div class="notification-item @notification.Type">
                            <div class="notification-icon">
                                @if (notification.Type == "reminder")
                                {
                                    <span>⏰</span>
                                }
                                else if (notification.Type == "warning")
                                {
                                    <span>⚠️</span>
                                }
                                else
                                {
                                    <span>ℹ️</span>
                                }
                            </div>
                            <div class="notification-content">
                                <div class="font-medium">@notification.Title</div>
                                <div class="text-sm text-medium">@notification.Message</div>
                                <div class="text-sm text-light">@notification.Time</div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="card mt-6">
        <div class="card-header">
            <h3 class="card-title">Quick Actions</h3>
        </div>
        <div class="card-body">
            <div class="quick-actions">
                <a href="/appointments/new" class="quick-action-btn">
                    <div class="quick-action-icon">📝</div>
                    <div>New Appointment</div>
                </a>
                <a href="/calendar" class="quick-action-btn">
                    <div class="quick-action-icon">📅</div>
                    <div>View Calendar</div>
                </a>
                <a href="/availability" class="quick-action-btn">
                    <div class="quick-action-icon">⏰</div>
                    <div>Set Availability</div>
                </a>
                <a href="/insights" class="quick-action-btn">
                    <div class="quick-action-icon">📊</div>
                    <div>View Reports</div>
                </a>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Appointment> appointments = new();
    private User? UserData { get; set; }
    private int numOfAppoint = 0;
    private DateTime nowDate = DateTime.Now;
    private const int noth = 0;

    protected override async Task OnInitializedAsync()
    {
        var customAuthStateProvider = (CustomAuthStateProvider)authProvider;
        var state = await authProvider.GetAuthenticationStateAsync();

        var user = state.User.Identity;
        if(user != null)
        {
            var name = user.Name;
            if(name != null)
            {
                var result = await userService.GetUserService(new GetUserDTO { UserName = name });

                if(result.Flag == true)
                {
                    UserData = result.userData;
                    if(UserData.Appointments != null)
                        foreach (var app in UserData.Appointments)
                        {
                            if (app.StartTime < nowDate && app.EndTime > nowDate)
                                numOfAppoint += 1;
                        }
                }               
            }
        }
    }

    private List<NotificationInfo> notifications = new()
    {
        new NotificationInfo { Type = "reminder", Title = "Upcoming Appointment", Message = "Sarah Johnson appointment in 2 hours", Time = "2 mins ago" },
        new NotificationInfo { Type = "warning", Title = "Payment Overdue", Message = "Invoice #1234 is 3 days overdue", Time = "1 hour ago" },
        new NotificationInfo { Type = "info", Title = "New Booking Request", Message = "Michael Brown requested a consultation", Time = "3 hours ago" },
        new NotificationInfo { Type = "reminder", Title = "Weekly Schedule", Message = "Remember to update your availability", Time = "1 day ago" }
    };

    public class NotificationInfo
    {
        public string Type { get; set; } = "";
        public string Title { get; set; } = "";
        public string Message { get; set; } = "";
        public string Time { get; set; } = "";
    }
}
